<?php

/**
 * Generated by the WordPress Meta Box Generator at http://goo.gl/8nwllb
 */
class Rational_Meta_Box {

    private $screens = array(
        'slider',
    );
    private $fields = array(
        array(
            'id' => 'insert-image',
            'label' => 'Insert Image',
            'type' => 'media',
        ),
        array(
            'id' => 'enter-text',
            'label' => 'Enter Text',
            'type' => 'textarea',
        ),
    );

    /**
     * Class construct method. Adds actions to their respective WordPress hooks.
     */
    public function __construct() {
        add_action('add_meta_boxes', array($this, 'add_meta_boxes'));
        add_action('admin_footer', array($this, 'admin_footer'));
        add_action('save_post', array($this, 'save_post'));
    }

    /**
     * Hooks into WordPress' add_meta_boxes function.
     * Goes through screens (post types) and adds the meta box.
     */
    public function add_meta_boxes() {
        foreach ($this->screens as $screen) {
            add_meta_box(
                    'slider-image', __('Slider Image', 'slider-image'), array($this, 'add_meta_box_callback'), $screen, 'advanced', 'high'
            );
        }
    }

    /**
     * Generates the HTML for the meta box
     * 
     * @param object $post WordPress post object
     */
    public function add_meta_box_callback($post) {
        wp_enqueue_media();
        wp_nonce_field('slider_image_data', 'slider_image_nonce');
        //echo 'Import Your Slider Here';
        $this->generate_fields($post);
    }

    /**
     * Hooks into WordPress' admin_footer function.
     * Adds scripts for media uploader.
     */
    public function admin_footer() {
        ?>
        <style>
            #id_slider_img {
                height: 100%;
                width: 100%;
            }
        </style>
        <script>
            // https://codestag.com/how-to-use-wordpress-3-5-media-uploader-in-theme-options/
            jQuery(document).ready(function ($) {
                if (typeof wp.media !== 'undefined') {
                    var _custom_media = true,
                            _orig_send_attachment = wp.media.editor.send.attachment;
                    $('.rational-metabox-media').click(function (e) {
                        var send_attachment_bkp = wp.media.editor.send.attachment;
                        var button = $(this);
                        var id = button.attr('id').replace('_button', '');
                        _custom_media = true;
                        wp.media.editor.send.attachment = function (props, attachment) {
                            if (_custom_media) {
                                $("#" + id).val(attachment.url);
                                $("#id_slider_img").attr('src', attachment.url);
                            } else {
                                return _orig_send_attachment.apply(this, [props, attachment]);
                            }
                            ;
                        }
                        wp.media.editor.open(button);
                        return false;
                    });
                    $('.add_media').on('click', function () {
                        _custom_media = false;
                    });
                }
            });
        </script><?php

    }

    /**
     * Generates the field's HTML for the meta box.
     */
    public function generate_fields($post) {
        $output = '';
        foreach ($this->fields as $field) {
            $label = '<label for="' . $field['id'] . '">' . $field['label'] . '</label>';
            $db_value = get_post_meta($post->ID, 'slider_image_' . $field['id'], true);
            if(!empty($db_value)){
            $btn_text = 'Change Image';
            }else{
                $btn_text = 'Upload Image';
            }
            switch ($field['type']) {
                case 'media':
                    $input = sprintf(
                            '<input style="display:none;" id="%s" name="%s" type="text" value="%s"><img id="id_slider_img" name="%s" src="%s"> <input class="button rational-metabox-media" id="%s_button" name="%s_button" type="button" value="%s" />', $field['id'], $field['id'], $db_value, $field['id'], $db_value, $field['id'], $field['id'],$btn_text
                    );
                    break;
                case 'textarea':
                    $input = sprintf(
                            '<textarea class="large-text" id="%s" name="%s" rows="5">%s</textarea>', $field['id'], $field['id'], $db_value
                    );
                    break;
                default:
                    $input = sprintf(
                            '<input %s id="%s" name="%s" type="%s" value="%s">', $field['type'] !== 'color' ? 'class="regular-text"' : '', $field['id'], $field['id'], $field['type'], $db_value
                    );
            }
            $output .= $this->row_format($label, $input);
        }
        echo '<table class="form-table"><tbody>' . $output . '</tbody></table>';
    }

    /**
     * Generates the HTML for table rows.
     */
    public function row_format($label, $input) {
        return sprintf(
                '<tr><th scope="row">%s</th><td>%s</td></tr>', $label, $input
        );
    }

    /**
     * Hooks into WordPress' save_post function
     */
    public function save_post($post_id) {
        if (!isset($_POST['slider_image_nonce']))
            return $post_id;

        $nonce = $_POST['slider_image_nonce'];
        if (!wp_verify_nonce($nonce, 'slider_image_data'))
            return $post_id;

        if (defined('DOING_AUTOSAVE') && DOING_AUTOSAVE)
            return $post_id;

        foreach ($this->fields as $field) {
            if (isset($_POST[$field['id']])) {
                switch ($field['type']) {
                    case 'email':
                        $_POST[$field['id']] = sanitize_email($_POST[$field['id']]);
                        break;
                    case 'text':
                        $_POST[$field['id']] = sanitize_text_field($_POST[$field['id']]);
                        break;
                }
                update_post_meta($post_id, 'slider_image_' . $field['id'], $_POST[$field['id']]);
            } else if ($field['type'] === 'checkbox') {
                update_post_meta($post_id, 'slider_image_' . $field['id'], '0');
            }
        }
    }

}

new Rational_Meta_Box;
?>
